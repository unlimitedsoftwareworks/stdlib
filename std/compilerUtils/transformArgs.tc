from std.vm_api.stdcore import StdCore 
from std.io import println

/**
 * Calls StdCoreAPI to load envs from runtime
 */
fn loadCLIArgs() -> u8[][] {
    // unsafe cast necessary
    let args = StdCore.load_runtimeEnv(b"args") as! u8[][]
    
    return args
}

/**
 * Loads the args and return them.
 * This is injected by the compiler at runtime.
 */
fn transformArgs() {
    let args: u8[][] = loadCLIArgs()
    let result: String[] = []
    result.extend(args.length)

    for let i: u64 = 0; i < args.length; i += 1 {
        result[i] = String.fromBytes(args[i])
    }

    return result
}